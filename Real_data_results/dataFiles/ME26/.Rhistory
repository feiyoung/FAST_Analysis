for(r in 1:M){
i_cluster <- sort(as.numeric(unique(cluster_pois_renumber_K9[[r]])))
meta_data <- data.frame(cluster = factor(cluster_pois_renumber_K9[[r]], levels=i_cluster))
pList2[[r]] <- plot_scatter(posList[[r]], meta_data, label_name = 'cluster',
base_size=base_axis_size,cols=cols_clusters_pois[i_cluster], point_size = 1.5,
point_alpha = pt_alpha_sample,no_guides=F) + labs(x=NULL, y=NULL)+
PRECAST:::mytheme_graybox(border_color = 'white') + xlim(c(0,77)) + ylim(c(1,120))
}
drawFigs(pList2, layout.dim = c(1,4), common.legend = F, legend.position = 'none')
##### 4b ###########
load("ccorMat_hV_precast_profast_hcc4.rds")
colnames(ccorMat) <- paste0("HCC", 1:4)
row.names(ccorMat) <- paste0(1:15)
median_ccor <- apply(ccorMat, 2, median) # max
mean(median_ccor)
df_ccor <- data.frame(Sample = names(median_ccor), CCor= median_ccor)
p_ccor <- ggplot(data=df_ccor, aes(x=Sample, y=CCor,  fill=Sample)) +
geom_bar(stat="identity", color='black')+ #scale_fill_manual(values=col_orderd2)+
theme_classic() + scale_x_discrete(breaks=NULL) + theme(text=element_text(size=20))+ ylab("Median CCor")+
xlab(NULL) +  theme(legend.position = 'bottom') +guides(fill= guide_legend(nrow = 2))
p_ccor
##### 4c ###########
load("tSNE2_iscmeb_pois_K9_HCC4.rds")
load("sampleID_HCC4.rds")
cols_sample <- chooseColors(palettes_name = "Hue n", n_colors = 4, plot_colors = T)
names(cols_sample) <- 1:4
cols_clusters <-  cols_clusters_pois
base_axis_size <- 12; pt_size_sample <- 1
#
meta_data <- data.frame(sample=factor(sampleID), Domain = factor(unlist(cluster_all_List[[4]]), levels=1:9))
#
meta_data <- data.frame(sample=factor(sampleID), Domain = factor(unlist(cluster_pois_renumber_K9), levels=1:9))
p1 <- plot_scatter(tSNE2_iscmeb_pois, meta_data, label_name = 'sample',
base_size=base_axis_size,cols=cols_sample, point_size = pt_size_sample,
point_alpha = 1,no_guides=F)# + labs(x=NULL, y=NULL)
p2 <- plot_scatter(tSNE2_iscmeb_pois, meta_data, label_name = 'Domain',
base_size=base_axis_size, cols=cols_clusters, point_size = pt_size_sample,
point_alpha = 1,no_guides=F)
p12 <- drawFigs(list(p1, p2), layout.dim = c(2,1), common.legend = F)
p12
load('timeVec_HCC4_new.rds')
names(timeVec)[names(timeVec)=='SpatialPCA-A'] <- 'SpatialPCA-L'
name_choose <-names(timeVec) #c('ProFAST_gauss', 'ProFAST_pois1','DR-SC',  'SpatialPCA_fast',   'SpatialPCA_raw' )
name_use <- c("ProFAST-P" ,    "ProFAST-G" ,    "SpatialPCA-L", "SpatialPCA-F",  "PRECAST" )
name_choose <-name_use
level_time <- names(col_orderd3)
df <- data.frame(Method= factor(name_choose, levels=level_time), Time= timeVec[name_choose])
p2<-ggplot(data=df, aes(x=Method, y=Time,  fill=Method)) +
geom_bar(stat="identity", color='black')+ scale_fill_manual(values=col_orderd3[level_time])+
theme_classic() + scale_x_discrete(breaks=NULL) + theme(text=element_text(size=20))+ ylab("Time (sec.)") +
xlab(NULL) + scale_y_log10()+ theme(legend.position = 'none')
p2
load("memListGB_HCC4.rds")
memVec <- unlist(memListGB)
new_names <- rename_vec(names(memVec), oldname = "SpatialPCA-A", newname = "SpatialPCA-L")
names(memVec) <-new_names
name_use <- names(col_orderd3)
### choosed methods:
name_use <- c("ProFAST-P" ,    "ProFAST-G" ,  "SpatialPCA-F",  "SpatialPCA-L",   "PRECAST" )
df <- data.frame(Method= factor(name_use, levels=name_use), Memory= memVec[name_use]) # +1
p_mem_cho <- ggplot(data=df, aes(x=Method, y=Memory,  fill=Method)) +
geom_bar(stat="identity", color='black')+ scale_fill_manual(values=col_orderd3[name_use])+
theme_classic() + scale_x_discrete(breaks=NULL) + theme(text=element_text(size=20))+ ylab("Memory (Gigabytes)")+
xlab(NULL) + ylab(NULL) + theme(legend.position = 'none')
p_mem_cho
drawFigs(pList=list(p2, p_mem_cho), layout.dim = c(1,2), common.legend = T)
drawFigs(pList=list(p2, p_mem_cho), layout.dim = c(1,2), common.legend = T, legend.position = 'bottom')
setwd("D:\\LearnFiles\\Research paper\\IntTemporalSpatial\\RealData\\Visium_HCC4\\DR_Rdata\\new_Rdata")
library(Seurat)
load('seuAll_pois_K9_HCC4.rds')
seuAll_count
library(Seurat)
load("housekeep_noSpa_dat_degs_choseK9_iscmeb_pois1_HCC4.rds")
library(dplyr)
n <- 5
dat_degs_pois %>%
group_by(cluster) %>%
top_n(n = n, wt = avg_log2FC) -> top10
reverse <- function(x) x[seq(length(x), 1, by=-1)]
features <- reverse(top10$gene)
col_here <- c("#F2E6AB", "#9C0141")
library(ggplot2)
p1 <- DotPlot(seuAll_count, features=unique(features), cols=col_here, #  idents = ident_here,
col.min = -1, col.max = 1) + coord_flip()+ theme(axis.text.y = element_text(face = "italic"))+
ylab("Domain") + xlab(NULL) +theme(axis.text.y = element_text(face = "italic"),axis.text.x=element_text(size=16))
p1
seu_combine_hcc4 <- seuAll_count[features,]
seu_combine_hcc4
save(seu_combine_hcc4, file='seu_combine_hcc4.rds')
setwd(paste0(dir_current, "Real_data_results/dataFiles/HCC4/") )
##### 4e ###########
load('seu_combine_hcc4.rds')
col_here <- c("#F2E6AB", "#9C0141")
##### 4e ###########
load('seu_combine_hcc4.rds')
col_here <- c("#F2E6AB", "#9C0141")
library(ggplot2)
p1 <- DotPlot(seu_combine_hcc4, features=row.names(seu_combine_hcc4), cols=col_here, #  idents = ident_here,
col.min = -1, col.max = 1) + coord_flip()+ theme(axis.text.y = element_text(face = "italic"))+
ylab("Domain") + xlab(NULL) +theme(axis.text.y = element_text(face = "italic"),axis.text.x=element_text(size=16))
p1
setwd("D:\\LearnFiles\\Research paper\\IntTemporalSpatial\\RealData\\Visium_HCC4\\DR_Rdata\\new_Rdata")
load('Prop_alt_count_pois_version_new.rds')
library(ggplot2)
# create vectors of different lengths
vec1 <- Prop_alt_count[1:8]
vec2 <- Prop_alt_count[9:11]
cols_use_two <- c("#F47646", "#9C0141")
names(cols_use_two) <- c("Stroma", 'TNE')
# combine vectors into a data frame
data2 <- data.frame(value = c(vec1, vec2),
group = factor(c(rep("TNE", length(vec1)),
rep("Stroma", length(vec2))), levels = names(cols_use_two)) )
data2$Method <- "SpaFactor-P"
data <- rbind(data1, data2)
mytheme_box_xyname <- function(border_col='gray10',base_size=20, legend_dir="vertical", legend_pos='right'){
require(ggplot2)
the <- theme(axis.text.x=element_text(size=base_size, color=1),
axis.text.y=element_text(size=base_size, color=1),
axis.title.x = element_text(size=base_size+2, color='black'),
axis.title.y = element_text(size=base_size+2, color='black'),
strip.text =  element_text(size=base_size, color='black'),
strip.background = element_rect(
linetype = 'solid', color='gray3'
),
legend.direction = legend_dir, legend.position = legend_pos,
legend.text=element_text(size=base_size+1),
legend.title=element_text(size=base_size+2),
panel.background= element_rect(fill = 'white', color=border_col))
the
}
# plot boxplot
p1 <- ggplot(data, aes(x = Method, y = value, fill=group)) + geom_boxplot(width = 0.4) +
labs(x = "Vector", y = "Value") + scale_fill_manual(values=cols_use_two)+
labs(x = "", y = "") + mytheme_box_xyname() +#PRECAST:::mytheme_graybox()
scale_x_discrete(breaks=NULL)
data <- rbind(data1, data2)
# Plot Moran's I ----------------------------------------------------------
load("moranI_array_scVI_HCC4.rds")
load("moranI_array_HCC4.rds")
load("moranI_array3_precast_HCC4.rds")
str(moranI_array)
dim1 <- dim(moranI_array)
dim1[3] <- 11
mIarray <- array(dim=dim1)
mIarray[,,1:9] <- moranI_array
mIarray[,,10] <- moranI_array_scVI[,,1]
mIarray[,,11] <- moranI_array3
pList <- list()
for(r in 1:4){
# r <- 1
mMat1 <- mIarray[r,,]
colnames(mMat1) <- c(attr(moranI_array,"MethodNames"), "scVI", "PRECAST")
method_use <- setdiff(names(col_orderd2), c("SpatialPCA-F",  "SpatialPCA-A"))
pList[[r]] <- PRECAST::boxPlot(mMat1[,method_use], cols=col_orderd2[method_use], ylabel = "Moran's I")+
theme_classic(base_size = 20)
}
apply(mMat1, 2, mean)
drawFigs(pList[1:2], layout.dim = c(1,2), common.legend = T, legend.position = 'bottom')
save(mIarray, file='mIarray_HCC4.rds')
##### 4g ###########
load('seu_mutate_list_gene5.rds')
load(paste0(dir_pre,'seu_mutate_list_gene5.rds'))
setwd(paste0(dir_current, "Real_data_results/dataFiles/HCC4/") )
##### 4g ###########
load('seu_mutate_list_gene5.rds')
gene_mutate_list <- c("CERS2", "ETS2", "OCEL1", "RIF1", "IGSF23")
range01 <- function(x, ...){(x - min(x, ...)) / (max(x, ...) - min(x, ...))*2-1}
i <- 3
seu <- seu_mutate_list[[i]]
library(Seurat)
seu <- NormalizeData(seu)
scale.data <- pbapply::pbapply(seu[["RNA"]]@data, 1, range01)
seu[["RNA"]]@scale.data <- t(scale.data)
seu_mutate_list[[i]] <- seu
featurePlot <- function(seu, feature, cols, quant=0.2, pt_size=1,title_size=12, to_upper=TRUE){
require(ggplot2)
dat <- data.frame(Spatial_1=seu$row, Spatial_2=seu$col)
dat$Expression <- seu[['RNA']]@scale.data[feature,]
med <- quantile(seu[['RNA']]@scale.data[feature,], probs =quant)
if(to_upper){
fe <- toupper(feature)
}else{
fe <- feature
}
ggplot(data=dat, aes(x=Spatial_1, y=Spatial_2, color=Expression)) + geom_point(size=pt_size) +
scale_colour_gradient2(
low = cols[1],
mid = "white",
high = cols[2], midpoint = med) + mytheme_graybox() +
ggtitle(fe) + theme(title =element_text(size=title_size, color=1)) + xlim(c(0,77)) + ylim(c(1,120))
}
quantVec <- c(0.2, 0.2, 0.3, 0.2)
pList <- list()
for(r in 1:4){
# r <- 3
pList[[r]] <- featurePlot(seu_mutate_list[[r]], feature=features[1], cols=cols, quant=quantVec[r],
pt_size = 1, title_size=0.1)
}
features
# r <- 3
pList[[r]] <- featurePlot(seu_mutate_list[[r]], feature='CERS2', cols=cols, quant=quantVec[r],
pt_size = 1, title_size=0.1)
pList <- list()
for(r in 1:4){
# r <- 3
pList[[r]] <- featurePlot(seu_mutate_list[[r]], feature='CERS2', cols=cols, quant=quantVec[r],
pt_size = 1, title_size=0.1)
}
seu_mutate_list
p3 <- featurePlot(seu_mutate_list[[r]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
p3 <- featurePlot(seu_mutate_list[[3]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
"
cols <-c("#361A95", "#D62728")
p3 <- featurePlot(seu_mutate_list[[3]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
cols <-c("#361A95", "#D62728")
p3 <- featurePlot(seu_mutate_list[[3]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
pList[[3]]
p3
p32 <- featurePlot(seu_mutate_list[[i]], feature='ETS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
p32
drawFigs(list(p31,p32), layout.dim = c(1,2))
p31 <- featurePlot(seu_mutate_list[[i]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
p32 <- featurePlot(seu_mutate_list[[i]], feature='ETS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=0.1)
drawFigs(list(p31,p32), layout.dim = c(1,2))
p31 <- featurePlot(seu_mutate_list[[i]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=12)
p32 <- featurePlot(seu_mutate_list[[i]], feature='ETS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=12)
drawFigs(list(p31,p32), layout.dim = c(1,2))
load('Prop_alt_count_pois_version_newK9.rds')
library(ggplot2)
# create vectors of different lengths
vec1 <- Prop_alt_count[1:3]
vec2 <- Prop_alt_count[4:6]
vec3 <- Prop_alt_count[7:9]
cols_use_two <- c("#9C0141", "#F47646", "#757CCE" )
simutool::colorbar_adj_transparent(cols_use_two, alpha=1)
names(cols_use_two) <- c('TNE1', "TNE2", "Stroma")
# combine vectors into a data frame
data <- data.frame(value = c(vec1, vec2, vec3),
group = factor(rep(names(cols_use_two), each=3), levels = names(cols_use_two)) )
# plot boxplot
ggplot(data, aes(x = group, y = value, fill=group)) + geom_boxplot(width = 0.4) +
labs(x = "Vector", y = "Value") + scale_fill_manual(values=cols_use_two)+
labs(x = "", y = "Mutation count per spot") +
theme_classic() + theme(text = element_text(size=20))
# plot boxplot
ggplot(data, aes(x = group, y = value, fill=group)) + geom_boxplot(width = 0.4) +
labs(x = "Vector", y = "Value") + scale_fill_manual(values=cols_use_two)+
labs(x = "", y = "Mutation count per spot") +
theme_classic() + theme(text = element_text(size=20))
rm(list=ls())
dir_current <- "E:/Research paper/IntTemporalSpatial/AnalysisCode/ProFAST_Analysis/"
source(paste0(dir_current, "Real_data_results/Rcode/util_funcs.R"))
setwd(paste0(dir_current, "Real_data_results/dataFiles/HCC4/") )
load("HCC4_posList1.rds")
posList <- posList1
load("clusterList_iscmeb_pois_reordered_K9_HCC4.rds")
pt_size_sample <- 0.2; pt_alpha_sample <- 0.5
pt_size_cluster <- 0.2; pt_alpha_cluster <- 0.5
base_axis_size <- 20
red_colors8 <- c("#8A0B0B",'#D30F0D', "#D82929", "#F43835",  "#E35353","#F98787", "#F9AFB0", "#FDD6D7")
blue_colors3 <- c("#282DEE" ,  "#0259B6", "#545BC3")
cols_clusters_pois <- c(red_colors8[-c(2,5)], blue_colors3)
#cols_clusters_pois <- cols_clusters
names(cols_clusters_pois) <- 1:9
pList2 <- list()
M <- 4
for(r in 1:M){
i_cluster <- sort(as.numeric(unique(cluster_pois_renumber_K9[[r]])))
meta_data <- data.frame(cluster = factor(cluster_pois_renumber_K9[[r]], levels=i_cluster))
pList2[[r]] <- plot_scatter(posList[[r]], meta_data, label_name = 'cluster',
base_size=base_axis_size,cols=cols_clusters_pois[i_cluster], point_size = 1.5,
point_alpha = pt_alpha_sample,no_guides=F) + labs(x=NULL, y=NULL)+
PRECAST:::mytheme_graybox(border_color = 'white') + xlim(c(0,77)) + ylim(c(1,120))
}
drawFigs(pList2, layout.dim = c(1,4), common.legend = F, legend.position = 'none')
##### 4b ###########
load("ccorMat_hV_precast_profast_hcc4.rds")
##### 4b ###########
load("ccorMat_hV_precast_profast_hcc4.rds")
colnames(ccorMat) <- paste0("HCC", 1:4)
row.names(ccorMat) <- paste0(1:15)
median_ccor <- apply(ccorMat, 2, median) # max
mean(median_ccor)
library(ggplot2)
df_ccor <- data.frame(Sample = names(median_ccor), CCor= median_ccor)
p_ccor <- ggplot(data=df_ccor, aes(x=Sample, y=CCor,  fill=Sample)) +
geom_bar(stat="identity", color='black')+ #scale_fill_manual(values=col_orderd2)+
theme_classic() + scale_x_discrete(breaks=NULL) + theme(text=element_text(size=20))+ ylab("Median CCor")+
xlab(NULL) +  theme(legend.position = 'bottom') +guides(fill= guide_legend(nrow = 2))
p_ccor
##### 4c ###########
load("tSNE2_iscmeb_pois_K9_HCC4.rds")
load("sampleID_HCC4.rds")
load("clusterList_iscmeb_pois_reordered_K9_HCC4.rds")
cols_sample <- chooseColors(palettes_name = "Hue n", n_colors = 4, plot_colors = T)
names(cols_sample) <- 1:4
cols_clusters <-  cols_clusters_pois
base_axis_size <- 12; pt_size_sample <- 1
#
meta_data <- data.frame(sample=factor(sampleID), Domain = factor(unlist(cluster_pois_renumber_K9), levels=1:9))
p1 <- plot_scatter(tSNE2_iscmeb_pois, meta_data, label_name = 'sample',
base_size=base_axis_size,cols=cols_sample, point_size = pt_size_sample,
point_alpha = 1,no_guides=F)# + labs(x=NULL, y=NULL)
p2 <- plot_scatter(tSNE2_iscmeb_pois, meta_data, label_name = 'Domain',
base_size=base_axis_size, cols=cols_clusters, point_size = pt_size_sample,
point_alpha = 1,no_guides=F)
p12 <- drawFigs(list(p1, p2), layout.dim = c(2,1), common.legend = F)
p12
load('timeVec_HCC4_new.rds')
names(timeVec)[names(timeVec)=='SpatialPCA-A'] <- 'SpatialPCA-L'
name_choose <-names(timeVec) #c('ProFAST_gauss', 'ProFAST_pois1','DR-SC',  'SpatialPCA_fast',   'SpatialPCA_raw' )
name_use <- c("ProFAST-P" ,    "ProFAST-G" ,    "SpatialPCA-L", "SpatialPCA-F",  "PRECAST" )
name_choose <-name_use
level_time <- names(col_orderd3)
df <- data.frame(Method= factor(name_choose, levels=level_time), Time= timeVec[name_choose])
p2 <-ggplot(data=df, aes(x=Method, y=Time,  fill=Method)) +
geom_bar(stat="identity", color='black')+ scale_fill_manual(values=col_orderd3[level_time])+
theme_classic() + scale_x_discrete(breaks=NULL) + theme(text=element_text(size=20))+ ylab("Time (sec.)") +
xlab(NULL) + scale_y_log10()+ theme(legend.position = 'none')
p2
load("memListGB_HCC4.rds")
memVec <- unlist(memListGB)
new_names <- rename_vec(names(memVec), oldname = "SpatialPCA-A", newname = "SpatialPCA-L")
names(memVec) <-new_names
name_use <- names(col_orderd3)
### choosed methods:
name_use <- c("ProFAST-P" ,    "ProFAST-G" ,  "SpatialPCA-F",  "SpatialPCA-L",   "PRECAST" )
df <- data.frame(Method= factor(name_use, levels=name_use), Memory= memVec[name_use]) # +1
p_mem_cho <- ggplot(data=df, aes(x=Method, y=Memory,  fill=Method)) +
geom_bar(stat="identity", color='black')+ scale_fill_manual(values=col_orderd3[name_use])+
theme_classic() + scale_x_discrete(breaks=NULL) + theme(text=element_text(size=20))+ ylab("Memory (Gigabytes)")+
xlab(NULL) + ylab(NULL) + theme(legend.position = 'none')
drawFigs(pList=list(p2, p_mem_cho), layout.dim = c(1,2), common.legend = T, legend.position = 'bottom')
##### 4e ###########
load('seu_combine_hcc4.rds')
col_here <- c("#F2E6AB", "#9C0141")
library(ggplot2)
p1 <- DotPlot(seu_combine_hcc4, features=row.names(seu_combine_hcc4), cols=col_here, #  idents = ident_here,
col.min = -1, col.max = 1) + coord_flip()+ theme(axis.text.y = element_text(face = "italic"))+
ylab("Domain") + xlab(NULL) +theme(axis.text.y = element_text(face = "italic"),axis.text.x=element_text(size=16))
p1
##### 4f ###########
load('Prop_alt_count_pois_version_newK9.rds')
library(ggplot2)
# create vectors of different length
vec1 <- Prop_alt_count[1:3]
vec2 <- Prop_alt_count[4:6]
vec3 <- Prop_alt_count[7:9]
cols_use_two <- c("#9C0141", "#F47646", "#757CCE" )
simutool::colorbar_adj_transparent(cols_use_two, alpha=1)
names(cols_use_two) <- c('TNE1', "TNE2", "Stroma")
# combine vectors into a data frame
data <- data.frame(value = c(vec1, vec2, vec3),
group = factor(rep(names(cols_use_two), each=3), levels = names(cols_use_two)) )
# plot boxplot
ggplot(data, aes(x = group, y = value, fill=group)) + geom_boxplot(width = 0.4) +
labs(x = "Vector", y = "Value") + scale_fill_manual(values=cols_use_two)+
labs(x = "", y = "Mutation count per spot") +
theme_classic() + theme(text = element_text(size=20))
load('seu_mutate_list_gene5.rds')
gene_mutate_list <- c("CERS2", "ETS2", "OCEL1", "RIF1", "IGSF23")
range01 <- function(x, ...){(x - min(x, ...)) / (max(x, ...) - min(x, ...))*2-1}
featurePlot <- function(seu, feature, cols, quant=0.2, pt_size=1,title_size=12, to_upper=TRUE){
require(ggplot2)
dat <- data.frame(Spatial_1=seu$row, Spatial_2=seu$col)
dat$Expression <- seu[['RNA']]@scale.data[feature,]
med <- quantile(seu[['RNA']]@scale.data[feature,], probs =quant)
if(to_upper){
fe <- toupper(feature)
}else{
fe <- feature
}
ggplot(data=dat, aes(x=Spatial_1, y=Spatial_2, color=Expression)) + geom_point(size=pt_size) +
scale_colour_gradient2(
low = cols[1],
mid = "white",
high = cols[2], midpoint = med) + mytheme_graybox() +
ggtitle(fe) + theme(title =element_text(size=title_size, color=1)) + xlim(c(0,77)) + ylim(c(1,120))
}
i <- 3
seu <- seu_mutate_list[[i]]
library(Seurat)
seu <- NormalizeData(seu)
scale.data <- pbapply::pbapply(seu[["RNA"]]@data, 1, range01)
seu[["RNA"]]@scale.data <- t(scale.data)
seu_mutate_list[[i]] <- seu
cols <-c("#361A95", "#D62728")
p31 <- featurePlot(seu_mutate_list[[i]], feature='CERS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=12)
p32 <- featurePlot(seu_mutate_list[[i]], feature='ETS2', cols=cols, quant= 0.3,
pt_size = 1, title_size=12)
drawFigs(list(p31,p32), layout.dim = c(1,2))
load('mIarray_HCC4.rds')
pList <- list()
for(r in 1:4){
# r <- 1
mMat1 <- mIarray[r,,]
colnames(mMat1) <- c(attr(moranI_array,"MethodNames"), "scVI", "PRECAST")
method_use <- setdiff(names(col_orderd2), c("SpatialPCA-F",  "SpatialPCA-A"))
pList[[r]] <- PRECAST::boxPlot(mMat1[,method_use], cols=col_orderd2[method_use], ylabel = "Moran's I")+
theme_classic(base_size = 20)
}
drawFigs(pList[1:2], layout.dim = c(1,2), common.legend = T, legend.position = 'bottom')
load("moranI_array_HCC4.rds")
pList <- list()
for(r in 1:4){
# r <- 1
mMat1 <- mIarray[r,,]
colnames(mMat1) <- c(attr(moranI_array,"MethodNames"), "scVI", "PRECAST")
method_use <- setdiff(names(col_orderd2), c("SpatialPCA-F",  "SpatialPCA-A"))
pList[[r]] <- PRECAST::boxPlot(mMat1[,method_use], cols=col_orderd2[method_use], ylabel = "Moran's I")+
theme_classic(base_size = 20)
}
drawFigs(pList[1:2], layout.dim = c(1,2), common.legend = T, legend.position = 'bottom')
rm(list=ls())
dir_current <- "E:/Research paper/IntTemporalSpatial/AnalysisCode/ProFAST_Analysis/"
source(paste0(dir_current, "Real_data_results/Rcode/util_funcs.R"))
setwd(paste0(dir_current, "Real_data_results/dataFiles/ME26/") )
##### 5a ###########
M <- 26
load("MacR2_Mat_method5_E12E16.rds")
#boxplot(MacR2_Mat[-(M+1), ])
name_id <- which(names(col_orderd2) %in% colnames(MacR2_Mat))
names_order <- names(col_orderd2)[name_id][-1] # remove poisson
library(ggplot2)
cols_use <- col_orderd2
p1 <- PRECAST::volinPlot(MacR2_Mat[-(M+1),names_order], ylabel = "MacFadden's R2") +
scale_fill_manual(values = cols_use[names_order]) + theme(legend.position = 'none') + ylab(NULL)
p1
p1 <- PRECAST::volinPlot(MacR2_Mat[-(M+1),names_order], ylabel = "MacFadden's R2") +
scale_fill_manual(values = cols_use[names_order]) + theme(legend.position = 'right') + ylab(NULL)
p1
##### 5b ###########
load("clusPF_iscmeb_List_E12E16.rds")
names(clusPF_iscmeb_List)
load("clusPF_iscmeb_List_Allmethods_E12E16.rds")
names(clusPF_iscmeb_List3)
M <- 26
clusPF_iscmeb_List <- clusPF_iscmeb_List3
clusPF_iscmeb_List[["LIGER"]] <- NULL
str(clusPF_iscmeb_List)
save(clusPF_iscmeb_List, file='clusterPF_List_E12E16.rds')
M <- 26
load("clusterPF_List_E12E16.rds")
name_id <- which(names(col_orderd2) %in% names(clusPF_iscmeb_List))
names_order <- names(col_orderd2)[name_id][-1] # remove ProFAST-P
ariMat <- sapply(clusPF_iscmeb_List, function(x) x[,1])
nmiMat <- sapply(clusPF_iscmeb_List, function(x) x[,2])
p_ari <- PRECAST::volinPlot(ariMat[-(M+1),names_order], ylabel = "ARI") +
scale_fill_manual(values = col_orderd2[names_order]) + theme(legend.position = 'none') + ylab(NULL)
p_ari
p_nmi <- PRECAST::volinPlot(nmiMat[-(M+1),names_order], ylabel = "NMI") +
scale_fill_manual(values = col_orderd2[names_order]) + theme(legend.position = 'none') + ylab(NULL)
p_nmi
drawFigs(list(p_ari, p_nmi), layout.dim = c(1,2), common.legend = T, align='hv', legend.position = "right")
setwd("D:\\LearnFiles\\Research paper\\IntTemporalSpatial\\RealData\\mouseEmbryo\\RdataE12E16\\")
# Plot UMAP RGB plot ------------------------------------------------------
load("umap3_pois_E12E16.rds")
load("posList_E12E16.rds")
load("UMAP3_correct_Listall_Method4_E12E16.rds")
U1 <- UMAP3_correct_Listall
load('UMAP3_correct_Listall_E12E16_tmp.rds')
for(iname in names(U1)){
message("iname=", iname)
UMAP3_correct_Listall[[iname]] <- U1[[iname]]
}
names(UMAP3_correct_Listall)
methods_use <- c("ProFAST-G", "PCA", "multiBatchPCA", 'NMF', "LIGER")
UMAP3_correct_Listall <- UMAP3_correct_Listall[methods_use]
nMethods <- length(UMAP3_correct_Listall)
str(UMAP3_correct_Listall)
nMethods <- length(UMAP3_correct_Listall)
save(UMAP3_correct_Listall, file='UMAP3_correct_Listall_E12E16.rds')
setwd(paste0(dir_current, "Real_data_results/dataFiles/ME26/") )
##### 5c ###########
load("posList_E12E16.rds")
load('UMAP3_correct_Listall_E12E16.rds')
E_list <- list(5:10, 11:14, 15:21, 22: 26, 27:30)
E_list <- lapply(E_list, function(x) x- 4)
slice_ids <- sapply(E_list, function(x) x[1])
Methods_use <- c(1,2,4)
names(UMAP3_correct_Listall)
pList_select <- list()
kk <- 1
for(r in slice_ids){ ## each sample
# r <- 7
pList_eachmethod <- list()
for(j in 1:3){
# j <- 1
j_method <- Methods_use[j]
message("r = ", r)
umap3_tmp <- UMAP3_correct_Listall[[j_method]]
ptmp <- plot_RGB(posList[[r]], umap3_tmp[indexList[[r]],], pointsize = 0.8) + scale_y_reverse()+ mytheme_graybox(border_color = "white") #
pList_select[[kk]]<- ptmp
kk <- kk + 1
}
}
library(cowplot)
p12 <- plot_grid(plotlist =pList_select, nrow=3, ncol=5, byrow = F) # , rel_widths = seq(0.6,1, by=0.1), rel_heights = seq(0.6,1, by=0.1)
getwd()
ggsave(file=paste0("UMAP_RGB_method3_SpaHeatmap.png"), plot = p12,
width = 10, height =7, units = "in", dpi = 50)
